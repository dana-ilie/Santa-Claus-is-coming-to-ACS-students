Starting audit...
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonIgnore. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:5:8: Unused import - interfaces.IChild. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:45:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'addNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'addNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:45:43: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:45:50: 'niceScoreBonus' hides a field. [HiddenField]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:50:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:54:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:58:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:62:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:66:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:70:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:74:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:78:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:82:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:86:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:90:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:94:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\builders\ChildBuilder.java:98:5: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:14:8: Unused import - org.checkerframework.checker.units.qual.C. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:105:32: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:258:33: Parameter sortStrategy should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:12:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:56:39: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:57:19: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:58:19: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:64:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:65:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:69:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:69:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:69:46: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:112:41: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:7:8: Unused import - java.util.Comparator. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:15:17: Parameter name should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:21:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:21:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:25:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:29:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getNiceScoreCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getNiceScoreCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:33:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getChildrenFromCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getChildrenFromCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:37:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'setNiceScoreCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'setNiceScoreCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:37:34: Parameter niceScoreCity should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Gift.java:58:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Gift.java:62:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Gift.java:62:29: Parameter quantity should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:59:67: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:60:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:61:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:65:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:66:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:70:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:70:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:70:46: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:61:67: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:62:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:63:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:67:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:68:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:72:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:72:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:72:46: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\YoungAdult.java:57:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\YoungAdult.java:58:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\YoungAdult.java:62:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\YoungAdult.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\YoungAdult.java:62:24: Parameter visitor should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\YoungAdult.java:62:46: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:18:5: Class 'SortStrategyFactory' looks like designed for extension (can be subclassed), but the method 'createStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortStrategyFactory' final or making the method 'createStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:18:48: Parameter strategyType should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:19:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\AnnualChangesInputData.java:49:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\AnnualChangesInputData.java:53:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\AnnualChangesInputData.java:53:33: Parameter strategyType should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:88:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:92:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:92:35: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:96:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:100:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:100:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildUpdateInputData.java:43:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildUpdateInputData.java:47:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildUpdateInputData.java:47:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\SantaGiftsInputData.java:43:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'getQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'getQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\SantaGiftsInputData.java:47:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'setQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'setQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\SantaGiftsInputData.java:47:29: Parameter quantity should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\ChildrenSortStrategy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\IChild.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\IChild.java:141:28: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\IChild.java:151:17: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\InitialRound.java:8:16: Using the '.*' form of import should be avoided - visitors.*. [AvoidStarImport]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\StandardRound.java:16:8: Unused import - java.util.Comparator. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\IdSort.java:10:5: Class 'IdSort' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IdSort' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\IdSort.java:11:30: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreCitySort.java:5:8: Unused import - factories.IChildFactory. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreCitySort.java:14:5: Class 'NiceScoreCitySort' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCitySort' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreCitySort.java:15:30: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreSort.java:7:5: Class 'NiceScoreSort' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreSort' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreSort.java:8:30: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\AnnualChange.java:73:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\AnnualChange.java:77:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\AnnualChange.java:77:33: Parameter strategyType should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\ChildUpdate.java:43:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\ChildUpdate.java:47:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\ChildUpdate.java:47:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:6:58: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:7:5: Class 'BlackElfChildVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BlackElfChildVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:10:36: '30' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:10:41: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:15:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\BlackElfChildVisitor.java:15:37: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\ChildVisitor.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\ChildVisitor.java:7:16: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\ChildVisitor.java:7:17: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\ChildVisitor.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\ChildVisitor.java:8:16: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\CityVisitor.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\IncrementChildAgeVisitor.java:7:5: Class 'IncrementChildAgeVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IncrementChildAgeVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\IncrementChildAgeVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\IncrementChildAgeVisitor.java:13:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\IncrementChildAgeVisitor.java:13:37: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\NiceScoreCityVisitor.java:8:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\NiceScoreCityVisitor.java:9:5: Class 'NiceScoreCityVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCityVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\NiceScoreCityVisitor.java:10:23: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:6:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:7:5: Class 'PinkElfChildVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PinkElfChildVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:10:36: '30' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:10:41: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:15:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\PinkElfChildVisitor.java:15:37: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\YellowElfChildVisitor.java:8:59: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\YellowElfChildVisitor.java:9:5: Class 'YellowElfChildVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YellowElfChildVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\YellowElfChildVisitor.java:10:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\YellowElfChildVisitor.java:10:37: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\visitors\YellowElfChildVisitor.java:50:23: Parameter child should be final. [FinalParameters]
Audit done.
Checkstyle ends with 143 errors.
