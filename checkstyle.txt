Starting audit...
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:14:8: Unused import - org.checkerframework.checker.units.qual.C. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:103:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:103:32: Parameter child should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\database\Database.java:255:33: Parameter sortStrategy should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:54:39: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:55:19: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:56:19: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Baby.java:101:41: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:14:17: Parameter name should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:20:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:24:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getNiceScoreCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getNiceScoreCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:28:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getChildrenFromCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getChildrenFromCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:32:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'calculateNiceScoreCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'calculateNiceScoreCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\City.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Gift.java:58:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Gift.java:62:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Gift.java:62:29: Parameter quantity should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:57:67: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:58:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Kid.java:59:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:59:67: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:60:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\entities\Teen.java:61:33: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:18:5: Class 'SortStrategyFactory' looks like designed for extension (can be subclassed), but the method 'createStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortStrategyFactory' final or making the method 'createStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:18:48: Parameter strategyType should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\factories\SortStrategyFactory.java:19:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\AnnualChangesInputData.java:49:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\AnnualChangesInputData.java:53:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\AnnualChangesInputData.java:53:33: Parameter strategyType should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:88:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:92:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:92:35: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:96:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:100:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildrenInputData.java:100:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildUpdateInputData.java:43:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildUpdateInputData.java:47:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\ChildUpdateInputData.java:47:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\SantaGiftsInputData.java:43:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'getQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'getQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\SantaGiftsInputData.java:47:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'setQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'setQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\input\SantaGiftsInputData.java:47:29: Parameter quantity should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\ChildrenSortStrategy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\IChild.java:131:28: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\interfaces\IChild.java:141:17: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\main\Main.java:26:27: '22' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\InitialRound.java:17:5: Method length is 152 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\InitialRound.java:55:44: '30' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\InitialRound.java:55:49: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\InitialRound.java:59:44: '30' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\InitialRound.java:59:49: '100' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\simulationflow\StandardRound.java:14:8: Unused import - java.util.Comparator. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\IdSort.java:10:5: Class 'IdSort' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IdSort' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\IdSort.java:11:30: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreCitySort.java:5:8: Unused import - factories.IChildFactory. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreCitySort.java:14:5: Class 'NiceScoreCitySort' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreCitySort' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreCitySort.java:15:30: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreSort.java:7:5: Class 'NiceScoreSort' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreSort' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\strategies\NiceScoreSort.java:8:30: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\AnnualChange.java:73:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\AnnualChange.java:77:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setStrategyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setStrategyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\AnnualChange.java:77:33: Parameter strategyType should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\ChildUpdate.java:43:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\ChildUpdate.java:47:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect2\.\src\updates\ChildUpdate.java:47:24: Parameter elf should be final. [FinalParameters]
Audit done.
Checkstyle ends with 67 errors.
